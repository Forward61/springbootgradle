buildscript {
	repositories {
		jcenter()
		maven { url 'http://repo.spring.io/plugins-release' }
	}

	dependencies {

	}
}

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

apply plugin: 'idea' // if you use IntelliJ
apply plugin: 'java'

ext {
	aspectjVersion = '1.8.9'
	springVersion = '4.2.1.RELEASE'
}

repositories {
	jcenter()
}

configurations {
	ajc
	aspects
	compile {
		extendsFrom aspects
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compile 'org.apache.commons:commons-lang3:3.8.1'


	compile "org.aspectj:aspectjrt:$aspectjVersion"
	compile "org.aspectj:aspectjweaver:$aspectjVersion"
	compile 'com.belerweb:pinyin4j:2.5.1'

	ajc "org.aspectj:aspectjtools:$aspectjVersion"
	aspects "org.springframework:spring-aspects:$springVersion"
}

def aspectj = { destDir, aspectPath, inpath, classpath ->
	ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties",
			classpath: configurations.ajc.asPath)

	ant.iajc(
			maxmem: "1024m", fork: "true", Xlint: "ignore",
			destDir: destDir,
			aspectPath: aspectPath,
			inpath: inpath,
			classpath: classpath,
			source: project.sourceCompatibility,
			target: project.targetCompatibility
	)
}

compileJava {
	doLast {
//		aspectj project.sourceSets.main.output.classesDir.absolutePath,
//				configurations.aspects.asPath,
//				project.sourceSets.main.output.classesDir.absolutePath,
//				project.sourceSets.main.runtimeClasspath.asPath
	}
}

compileTestJava {
	dependsOn jar

	doLast {
		aspectj project.sourceSets.test.output.classesDir.absolutePath,
				configurations.aspects.asPath + jar.archivePath,
				project.sourceSets.test.output.classesDir.absolutePath,
				project.sourceSets.test.runtimeClasspath.asPath
	}
}
